// <auto-generated />
using System;
using CurrencyExchange.DAL.EntityFramework.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyExchange.DAL.EntityFramework.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    partial class SqlServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyExchange.DAL.EntityFramework.Entities.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(19, 4)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d4d4786-4cc0-4f2b-ac1a-4b0158d65922"),
                            Code = "RUB",
                            Rate = 0m
                        },
                        new
                        {
                            Id = new Guid("521cf211-eb99-4889-b3b6-ac94c34b5e13"),
                            Code = "KRW",
                            Rate = 0m
                        });
                });

            modelBuilder.Entity("CurrencyExchange.DAL.EntityFramework.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eedced01-3e38-4762-b9fd-91dea1daef6a"),
                            Name = "User A"
                        },
                        new
                        {
                            Id = new Guid("d1ec617b-6266-44ff-9fce-864d057dc108"),
                            Name = "User B"
                        });
                });

            modelBuilder.Entity("CurrencyExchange.DAL.EntityFramework.Entities.UserWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserWallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("782de4d7-25e1-49ad-96b2-f9c9e9c10daa"),
                            Balance = 0m,
                            CurrencyId = new Guid("3d4d4786-4cc0-4f2b-ac1a-4b0158d65922"),
                            UserId = new Guid("eedced01-3e38-4762-b9fd-91dea1daef6a")
                        },
                        new
                        {
                            Id = new Guid("51649174-7433-45bd-bbe3-81d25705a5c0"),
                            Balance = 0m,
                            CurrencyId = new Guid("521cf211-eb99-4889-b3b6-ac94c34b5e13"),
                            UserId = new Guid("d1ec617b-6266-44ff-9fce-864d057dc108")
                        });
                });

            modelBuilder.Entity("CurrencyExchange.DAL.EntityFramework.Entities.UserWallet", b =>
                {
                    b.HasOne("CurrencyExchange.DAL.EntityFramework.Entities.Currency", "Currency")
                        .WithMany("UserWallets")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurrencyExchange.DAL.EntityFramework.Entities.User", "User")
                        .WithMany("UserWallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
